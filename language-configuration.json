{
	"comments": {
		"lineComment": "//",
		"blockComment": [ "(*", "*)" ]
	},
	"brackets": [
		["{", "}"],
		["[", "]"],
		["(", ")"]
	],
	"autoClosingPairs": [
		{"open": "{", "close": "}"},
		{"open": "{", "close": "]"},
		{"open": "(", "close": ")"},
		{"open": "\"", "close": "\"",  "notIn": ["string"]},
        {"open": "'", "close": "'",  "notIn": ["string", "comment"]},
        {"open": "var", "close": "end_var", "notIn": ["string"]},
		{"open": "var_input", "close": "end_var", "notIn": ["string"]},
		{"open": "var_output", "close": "end_var", "notIn": ["string"]},
		{"open": "var_in_out", "close": "end_var", "notIn": ["string"]},
		{"open": "var_temp", "close": "end_var", "notIn": ["string"]},
		{"open": "var_global", "close": "end_var", "notIn": ["string"]},
		{"open": "var_access", "close": "end_var", "notIn": ["string"]},
		{"open": "var_external", "close": "end_var", "notIn": ["string"]},
		{"open": "type", "close": "end_type", "notIn": ["string"]},
		{"open": "struct", "close": "end_struct", "notIn": ["string"]},
		{"open": "program", "close": "end_program", "notIn": ["string"]},
		{"open": "function", "close": "end_function", "notIn": ["string"]},
		{"open": "function_block", "close": "end_function_block", "notIn": ["string"]},
		{"open": "action", "close": "end_action", "notIn": ["string"]},
		{"open": "step", "close": "end_step", "notIn": ["string"]},
		{"open": "initial_step", "close": "end_step", "notIn": ["string"]},
		{"open": "transaction", "close": "end_transaction", "notIn": ["string"]},
		{"open": "configuration", "close": "end_configuration", "notIn": ["string"]},
		{"open": "tcp", "close": "end_tcp", "notIn": ["string"]},
		{"open": "recource", "close": "end_recource", "notIn": ["string"]},
		{"open": "channel", "close": "end_channel", "notIn": ["string"]},
		{"open": "library", "close": "end_library", "notIn": ["string"]},
		{"open": "folder", "close": "end_folder", "notIn": ["string"]},
		{"open": "binaries", "close": "end_binaries", "notIn": ["string"]},
		{"open": "includes", "close": "end_includes", "notIn": ["string"]},
		{"open": "sources", "close": "end_source", "notIn": ["string"]}
	],
	"surroundingPairs": [
		["{", "}"],
		["[", "]"],
		["(", ")"],
		["\"", "\""],
        ["'", "'"],
        ["var", "end_var"],
		["var_input", "end_var"],
		["var_output", "end_var"],
		["var_in_out", "end_var"],
		["var_temp", "end_var"],
		["var_global", "end_var"],
		["var_access", "end_var"],
		["var_external", "end_var"],
		["type", "end_type"],
		["struct", "end_struct"],
		["program", "end_program"],
		["function", "end_function"],
		["function_block", "end_function_block"],
		["action", "end_action"],
		["step", "end_step"],
		["initial_step", "end_step"],
		["transaction", "end_transaction"],
		["configuration", "end_configuration"],
		["tcp", "end_tcp"],
		["recource", "end_recource"],
		["channel", "end_channel"],
		["library", "end_library"],
		["folder", "end_folder"],
		["binaries", "end_binaries"],
		["includes", "end_includes"],
		["sources", "end_source"]
    ],
    "indentationRules": {
		"increaseIndentPattern": "({(?!.+}).*|\\(|\\[|(IF|ELSE|FOR|WHILE|CASE|THEN|ELSIF|DO|BY|OF|REPEAT|).*)\\s*(/[\\(*].*)?$",
		"decreaseIndentPattern": "^((.*\\*\\/)?|(.*\\*\\)?)\\s*((\\})|(\\)+[;,])|(\\][;,])|\\b(else)|\\b((end_(if|for|while|case|repeat));))"
	},

	// enhancedBrackets:[
	// 	{ openTrigger: 'n', open: /begin$/i, closeComplete: 'end', matchCase: true },
	// 	{ openTrigger: 'e', open: /case$/i, closeComplete: 'end', matchCase: true },
	// 	{ openTrigger: 'n', open: /when$/i, closeComplete: 'then', matchCase: true }
	// ],
	// noindentBrackets: '()',
}